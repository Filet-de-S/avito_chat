version: "3.8"
services:

  chat-api:
    build:
      context: ..
      dockerfile: build/Dockerfile.service
      args:
        CGO_ENABLED: $CGO_ENABLED
    depends_on:
      - pg
      - pwmanager
    ports:
      - 9000:8080
    restart: always
    env_file:
      - service.env
      - files.env
    environment:
      PW_MNG_HOST: "pwmanager"
      PW_MNG_PORT: "1337"
      PPROF: $PPROF
      TZ: $TZ
    secrets:
      - source: pwmng
        target: $PW_MNG_FILE

  pwmanager:
    build:
      context: ..
      dockerfile: build/Dockerfile.pwmanager
    depends_on:
      - pg
    restart: always
    env_file:
      - service.env
      - files.env
    environment:
      MAIN_SERVICE: "chat-api:8080"
      FILES: $PGPASSFILE:$UUIDS_FILE:$PPROF_FILE
      TZ: $TZ
    secrets:
      - source: pgpass
        target: $PGPASSFILE
      - source: uuids
        target: $UUIDS_FILE
      - source: pwmng
        target: $PW_MNG_FILE
      - source: pprof
        target: $PPROF_FILE

  pg:
    image: postgres:12.4-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/$POSTGRES_PASSWORD_FILE
      TZ: $TZ
    secrets:
      - source: pgpassf
        target: $POSTGRES_PASSWORD_FILE
    volumes:
      - data:/var/lib/postgresql/data
      - ../migrations:/docker-entrypoint-initdb.d
      - ../secrets/migrations/002_create-role_client.up.sql:/docker-entrypoint-initdb.d/002_create-role_client.up.sql

secrets:
  pgpassf:
    file: ../secrets/$POSTGRES_PASSWORD_FILE
  pgpass:
    file: ../secrets/$PGPASSFILE
  uuids:
    file: ../secrets/$UUIDS_FILE
  pwmng:
    file: ../secrets/$PW_MNG_FILE
  pprof:
    file: ../secrets/$PPROF_FILE

volumes:
  data:
